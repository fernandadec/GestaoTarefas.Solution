// <auto-generated />
using System;
using GestaoTarefas.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestaoTarefas.Data.Migrations
{
    [DbContext(typeof(ApsContext))]
    partial class ApsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GestaoTarefas.Domain.Entities.Comum.ListaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IdLista");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataCriacao");

                    b.Property<string>("NomeAutor")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("NomeAutor");

                    b.Property<string>("NomeLista")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("NomeLista");

                    b.HasKey("Id");

                    b.HasIndex("NomeLista")
                        .IsUnique();

                    b.ToTable("Lista", (string)null);
                });

            modelBuilder.Entity("GestaoTarefas.Domain.Entities.Comum.ListaTarefasEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IdListaTarefas");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("Ativo");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataCriacao");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Descricao");

                    b.Property<Guid>("ListaId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IdLista");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Titulo");

                    b.HasKey("Id");

                    b.HasIndex("ListaId");

                    b.ToTable("ListaTarefas", (string)null);
                });

            modelBuilder.Entity("GestaoTarefas.Domain.Entities.Comum.UsuarioEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IdUsuario");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Token");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Email", "Senha");

                    b.ToTable("Usuario", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("4ab52682-7f30-4f2a-abfc-313261d73761"),
                            Ativo = true,
                            Email = "administrador@gmail.com",
                            Nome = "Administrador",
                            Senha = "AAAAAAAAAAAAAAAAAAAAAA==.3wu0cnkZF7So7aGdZmThMQ==.B+gebXkAUyeUz6gi5e7LGWRG19Lyah1MFrg9sKxAoxw=",
                            Token = ""
                        });
                });

            modelBuilder.Entity("GestaoTarefas.Domain.Entities.Comum.ListaTarefasEntity", b =>
                {
                    b.HasOne("GestaoTarefas.Domain.Entities.Comum.ListaEntity", "Listas")
                        .WithMany("ListaTarefas")
                        .HasForeignKey("ListaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Listas");
                });

            modelBuilder.Entity("GestaoTarefas.Domain.Entities.Comum.ListaEntity", b =>
                {
                    b.Navigation("ListaTarefas");
                });
#pragma warning restore 612, 618
        }
    }
}
